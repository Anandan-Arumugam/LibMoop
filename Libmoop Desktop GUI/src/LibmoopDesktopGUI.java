import com.libmoop.api.AlgorithmManager;
import com.libmoop.solution.Problem;
import java.awt.Color;
import java.io.File;
import javax.swing.JFileChooser;

/**
 * @author Team C
 */
public class LibmoopDesktopGUI extends javax.swing.JFrame {

    /**
     * private variables
     */
    
    //Input settings
    int popSize, //population size 
            maxGens, //maximum generations
            maxRuns;//maximum runs
    
    double mutationProb, 
            crossoverProb;
 
    String algorithm,
            selection,
            crossover,
            mutation;
    
    String inputFilePath,
            populationType;
    
    boolean overrideInputSettings;
    
    //Problem input
    int totalVariables,
            numDiscreteVars,
            problemType;//Minimization or Maximization
    
    double[] lowerBounds,
            upperBounds;
    
    boolean[] continuous,
            lowerBoundRigid,
            upperBoundRigid;
    
    String outputFilePath;
    
    boolean saveOutputToFile;
    
    //maxm =1 for maximization problems, maxm = -1
    
    int maxm;
    
    
    public LibmoopDesktopGUI() {
        initComponents();
        ddlAlgo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Simple GA" }));
        ddlSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tournament" }));
        ddlMutation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mutation 1" }));
        ddlCrossover.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SBX" }));
        txtLowerBounds.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioGroupBinaryReal = new javax.swing.ButtonGroup();
        radioGroupObjType = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtLowerBounds = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtLowerRigids = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtContinuousVariables = new javax.swing.JTextField();
        radioMaxim = new javax.swing.JRadioButton();
        jLabel25 = new javax.swing.JLabel();
        radioMinim = new javax.swing.JRadioButton();
        spinnerTotalVariables = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        txtUpperBounds = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtUpperRigids = new javax.swing.JTextField();
        btnAbort = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        checkSaveToFile = new javax.swing.JCheckBox();
        btnBrowseOutput = new javax.swing.JButton();
        lblRunStatus = new javax.swing.JLabel();
        lblOutputFilePath = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ddlAlgo = new javax.swing.JComboBox();
        ddlSelection = new javax.swing.JComboBox();
        ddlMutation = new javax.swing.JComboBox();
        ddlCrossover = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtPopSize = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtMutationProb = new javax.swing.JTextField();
        txtCrossoverProb = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        radioReal = new javax.swing.JRadioButton();
        radioBinary = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        btnSelectInputFile = new javax.swing.JButton();
        txtMaxRuns = new javax.swing.JTextField();
        txtMaxGens = new javax.swing.JTextField();
        checkOverride = new javax.swing.JCheckBox();
        btnSaveInputSettings = new javax.swing.JButton();
        lblInputFilePath = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LibMoop Tool");

        jTabbedPane1.setAutoscrolls(true);
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("Objective Function");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Constraint functions can be added here seperated by (;)");
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("Constraint Function");

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("The objective functions can be added here seperated by (;)");
        jScrollPane2.setViewportView(jTextArea2);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Bounds");

        jLabel12.setText("Total Variables");

        jLabel8.setText("Lower Bounds");

        txtLowerBounds.setToolTipText("Provide lower variable bound sperated by comma (,) for all the variables ");
        txtLowerBounds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLowerBoundsActionPerformed(evt);
            }
        });

        jLabel22.setText("Rigid Lower Bounds?");

        txtLowerRigids.setToolTipText("Tell whether each variable has a rigid lower limit. For example, if there are 3 variables with 2 having rigid lower limits and one does not have rigid boundaries, then provide input as T,T,F");

        jLabel24.setText("Continuous?");

        txtContinuousVariables.setToolTipText("Provide T for true and F for false seperated by comma (,)");

        radioGroupObjType.add(radioMaxim);
        radioMaxim.setSelected(true);
        radioMaxim.setText("Maximization");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setText("Objective Type");

        radioGroupObjType.add(radioMinim);
        radioMinim.setText("Minimization");

        spinnerTotalVariables.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerTotalVariablesStateChanged(evt);
            }
        });
        spinnerTotalVariables.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                spinnerTotalVariablesPropertyChange(evt);
            }
        });
        spinnerTotalVariables.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                spinnerTotalVariablesKeyReleased(evt);
            }
        });

        jLabel15.setText("Upper Bounds");

        txtUpperBounds.setToolTipText("Provide upper variable bound sperated by comma (,) for all the variables ");

        jLabel23.setText("Rigid Upper Bounds?");

        txtUpperRigids.setToolTipText("Tell whether each variable has a rigid upper limit. For example, if there are 3 variables with 2 having rigid lower limits and one does not have rigid boundaries, then provide input as T,T,F");

        btnAbort.setBackground(new java.awt.Color(255, 102, 51));
        btnAbort.setText("Abort");

        btnStart.setBackground(new java.awt.Color(204, 255, 153));
        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        checkSaveToFile.setText("Save output to file");
        checkSaveToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkSaveToFileActionPerformed(evt);
            }
        });

        btnBrowseOutput.setText("Choose output file");
        btnBrowseOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseOutputActionPerformed(evt);
            }
        });

        lblRunStatus.setBackground(new java.awt.Color(153, 153, 153));
        lblRunStatus.setForeground(new java.awt.Color(255, 102, 51));
        lblRunStatus.setText("Ready..");

        lblOutputFilePath.setText("no file selected");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2)))
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel11)
                            .addComponent(jLabel25)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(radioMaxim)
                                .addGap(18, 18, 18)
                                .addComponent(radioMinim)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnStart)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAbort))
                            .addComponent(jLabel12)
                            .addComponent(jLabel8)
                            .addComponent(jLabel15))
                        .addGap(0, 610, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 7, Short.MAX_VALUE)
                        .addComponent(checkSaveToFile)
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtLowerBounds, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUpperBounds, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtLowerRigids, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtUpperRigids, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtContinuousVariables, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(btnBrowseOutput)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblOutputFilePath))
                            .addComponent(spinnerTotalVariables, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(289, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblRunStatus)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addGap(74, 74, 74)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioMaxim)
                    .addComponent(radioMinim))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(spinnerTotalVariables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(txtContinuousVariables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtLowerBounds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(txtLowerRigids, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtUpperBounds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(txtUpperRigids, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkSaveToFile)
                    .addComponent(btnBrowseOutput)
                    .addComponent(lblOutputFilePath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(btnAbort))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRunStatus)
                .addGap(7, 7, 7))
        );

        jTabbedPane1.addTab("Objective Functions and Constraints", jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Algorithm");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Selection Scheme");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Mutation Scheme");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Crossover Scheme");

        ddlAlgo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SimpleGA" }));
        ddlAlgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddlAlgoActionPerformed(evt);
            }
        });

        ddlSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BinaryTournament" }));

        ddlMutation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SingleBitBinaryMutation" }));

        ddlCrossover.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "UniformBinaryCrossover" }));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Population Size");

        txtPopSize.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPopSize.setText("20");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Mutation Probability");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Crossover Probability");

        txtMutationProb.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMutationProb.setText("0.20");

        txtCrossoverProb.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCrossoverProb.setText("0.50");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Population Type");

        radioGroupBinaryReal.add(radioReal);
        radioReal.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        radioReal.setText("Real");
        radioReal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRealActionPerformed(evt);
            }
        });

        radioGroupBinaryReal.add(radioBinary);
        radioBinary.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        radioBinary.setSelected(true);
        radioBinary.setText("Binary");
        radioBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBinaryActionPerformed(evt);
            }
        });

        jLabel9.setText("(0 to 1)");

        jLabel17.setText("(0 to 1)");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Max. Generations");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Max. Runs");

        jLabel21.setText("Read  values from file");

        btnSelectInputFile.setText("Choose input file");
        btnSelectInputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectInputFileActionPerformed(evt);
            }
        });

        txtMaxRuns.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMaxRuns.setText("2");

        txtMaxGens.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMaxGens.setText("30");

        checkOverride.setText("Override above values with the values read from file");

        btnSaveInputSettings.setText("Save Input Settings");

        lblInputFilePath.setText("no file selected");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel4))
                                                .addGap(26, 26, 26))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(radioBinary, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(2, 2, 2))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addGap(1, 1, 1)
                                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel6)
                                                            .addComponent(jLabel16)))
                                                    .addComponent(jLabel3))
                                                .addGap(20, 20, 20)))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ddlCrossover, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(radioReal, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(ddlAlgo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(ddlMutation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(ddlSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPopSize, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtCrossoverProb))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtMutationProb, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel9)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMaxGens, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel19)
                                        .addGap(10, 10, 10)
                                        .addComponent(txtMaxRuns, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkOverride)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSelectInputFile)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblInputFilePath))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSaveInputSettings)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaxRuns, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPopSize, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMaxGens, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 21, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ddlAlgo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ddlSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ddlMutation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txtMutationProb, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ddlCrossover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(txtCrossoverProb, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioReal, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(radioBinary))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(btnSelectInputFile)
                    .addComponent(lblInputFilePath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkOverride)
                .addGap(32, 32, 32)
                .addComponent(btnSaveInputSettings)
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("Algorithm Settings", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ddlAlgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddlAlgoActionPerformed
        // TODO add your handling code here:
               
    }//GEN-LAST:event_ddlAlgoActionPerformed

    private void radioRealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRealActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioRealActionPerformed

    private void radioBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBinaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioBinaryActionPerformed

    private void btnSelectInputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectInputFileActionPerformed
         JFileChooser inputFileChooser = new JFileChooser();
        inputFileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = inputFileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
        //user has selected a file
            File selectedInputFile = inputFileChooser.getSelectedFile();
            lblInputFilePath.setText(selectedInputFile.getAbsolutePath());
        }
    }//GEN-LAST:event_btnSelectInputFileActionPerformed

    private void spinnerTotalVariablesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_spinnerTotalVariablesPropertyChange
        // TODO add your handling code here:
        //lblVars.setText(spinnerTotalVariables.getValue().toString());
    }//GEN-LAST:event_spinnerTotalVariablesPropertyChange

    private void spinnerTotalVariablesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spinnerTotalVariablesKeyReleased
        // TODO add your handling code here:
        //lblVars.setText(spinnerTotalVariables.getValue().toString());
    }//GEN-LAST:event_spinnerTotalVariablesKeyReleased

    private void spinnerTotalVariablesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerTotalVariablesStateChanged
        // TODO add your handling code here:
        //lblVars.setText(spinnerTotalVariables.getValue().toString());
    }//GEN-LAST:event_spinnerTotalVariablesStateChanged

    private void txtLowerBoundsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLowerBoundsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLowerBoundsActionPerformed

    private void checkSaveToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkSaveToFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkSaveToFileActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
try{
        // Read all the variables for input settings
        popSize = Integer.valueOf(txtPopSize.getText().trim());
        maxGens = Integer.valueOf(txtMaxGens.getText().trim());
        maxRuns = Integer.valueOf(txtMaxRuns.getText().trim());
        
        algorithm = ddlAlgo.getSelectedItem().toString().trim();
        selection = ddlSelection.getSelectedItem().toString().trim();
        crossover = ddlCrossover.getSelectedItem().toString().trim();
        mutation = ddlMutation.getSelectedItem().toString().trim();
        
        mutationProb = Double.valueOf(txtMutationProb.getText().trim());
        crossoverProb = Double.valueOf(txtCrossoverProb.getText().trim());
                       
        inputFilePath = lblInputFilePath.getText().trim();
        if(radioBinary.isSelected()){
            populationType = "b";
        }
        else if(radioReal.isSelected()){
            populationType = "r";
        }        
        
        overrideInputSettings = checkOverride.isSelected();
        
        //read variables for problem input
        totalVariables = Integer.valueOf(spinnerTotalVariables.getValue().toString().trim());
        
        String[] upperBoundsString = txtUpperBounds.getText().split(",");
        upperBounds = new double[upperBoundsString.length];
        for(int i=0;i<upperBoundsString.length;i++){
            
            upperBounds[i] = Double.valueOf(upperBoundsString[i].trim());           
        }
        
        String[] lowerBoundsString = txtLowerBounds.getText().split(",");
        lowerBounds = new double[lowerBoundsString.length];
        for(int i=0;i<lowerBoundsString.length;i++){
            
            lowerBounds[i] = Double.valueOf(lowerBoundsString[i].trim());           
        }
        
        int totalDiscrete = 0;
        String[] continousVariablesString = txtContinuousVariables.getText().split(",");
        continuous = new boolean[continousVariablesString.length];
        for(int i=0;i<continousVariablesString.length;i++){
            
            continuous[i] = (continousVariablesString[i].trim().toUpperCase().equals("T"));
            if(!continuous[i])
                totalDiscrete++;
        }
        numDiscreteVars = totalDiscrete;
        
        String[] rigidUpperBoundsString = txtUpperRigids.getText().split(",");
        upperBoundRigid = new boolean[rigidUpperBoundsString.length];
        for(int i=0;i<rigidUpperBoundsString.length;i++){
            
            upperBoundRigid[i] = (rigidUpperBoundsString[i].trim().toUpperCase().equals("T"));
        }
        
        String[] rigidLowerBoundsString = txtLowerRigids.getText().split(",");
        lowerBoundRigid = new boolean[rigidLowerBoundsString.length];
        for(int i=0;i<rigidLowerBoundsString.length;i++){
            
            lowerBoundRigid[i] = (rigidLowerBoundsString[i].trim().toUpperCase().equals("T"));
        }
        
        outputFilePath = lblOutputFilePath.getText().trim();
        inputFilePath = lblInputFilePath.getText().trim();
        saveOutputToFile = checkSaveToFile.isSelected();     
        
        if(radioMaxim.isSelected()){
            maxm = 1;
        }
        else if(radioMinim.isSelected()){
            maxm = -1;
        }
        
        //create problem
        Problem problem = new Problem(totalVariables, numDiscreteVars, lowerBounds, upperBounds, lowerBoundRigid, upperBoundRigid, maxm);
        
        //call algorithm manager API
        AlgorithmManager manager = new AlgorithmManager(problem, 
                inputFilePath, 
                outputFilePath);
        lblRunStatus.setText("Running..");
        lblRunStatus.setForeground(Color.blue);
        int runStatus = manager.execute();
        if(runStatus==0){
            lblRunStatus.setText("Execution complete..");
        lblRunStatus.setForeground(Color.green);
        }
        else if(runStatus==-1){
            lblRunStatus.setText("Error..");
        lblRunStatus.setForeground(Color.red);
        }        
}
catch(Exception e){
    lblRunStatus.setText("Error..");
        lblRunStatus.setForeground(Color.red);
}
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnBrowseOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseOutputActionPerformed
        // TODO add your handling code here:
        JFileChooser outputFileChooser = new JFileChooser();
        outputFileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = outputFileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
        //user has selected a file
            File selectedOutputFile = outputFileChooser.getSelectedFile();
            lblOutputFilePath.setText(selectedOutputFile.getAbsolutePath());
        }        
    }//GEN-LAST:event_btnBrowseOutputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibmoopDesktopGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibmoopDesktopGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibmoopDesktopGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibmoopDesktopGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LibmoopDesktopGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbort;
    private javax.swing.JButton btnBrowseOutput;
    private javax.swing.JButton btnSaveInputSettings;
    private javax.swing.JButton btnSelectInputFile;
    private javax.swing.JButton btnStart;
    private javax.swing.JCheckBox checkOverride;
    private javax.swing.JCheckBox checkSaveToFile;
    private javax.swing.JComboBox ddlAlgo;
    private javax.swing.JComboBox ddlCrossover;
    private javax.swing.JComboBox ddlMutation;
    private javax.swing.JComboBox ddlSelection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel lblInputFilePath;
    private javax.swing.JLabel lblOutputFilePath;
    private javax.swing.JLabel lblRunStatus;
    private javax.swing.JRadioButton radioBinary;
    private javax.swing.ButtonGroup radioGroupBinaryReal;
    private javax.swing.ButtonGroup radioGroupObjType;
    private javax.swing.JRadioButton radioMaxim;
    private javax.swing.JRadioButton radioMinim;
    private javax.swing.JRadioButton radioReal;
    private javax.swing.JSpinner spinnerTotalVariables;
    private javax.swing.JTextField txtContinuousVariables;
    private javax.swing.JTextField txtCrossoverProb;
    private javax.swing.JTextField txtLowerBounds;
    private javax.swing.JTextField txtLowerRigids;
    private javax.swing.JTextField txtMaxGens;
    private javax.swing.JTextField txtMaxRuns;
    private javax.swing.JTextField txtMutationProb;
    private javax.swing.JTextField txtPopSize;
    private javax.swing.JTextField txtUpperBounds;
    private javax.swing.JTextField txtUpperRigids;
    // End of variables declaration//GEN-END:variables
}
